our %PREREQ_PM;
BEGIN {
   %PREREQ_PM= (
      'ExtUtils::Depends' => '0.405',
      'Devel::CheckLib'   => '1.03',
   );
   # If the prereqs for this script are missing,
   # write out a Makefile that tells CPAN to install them
   my $use_prereqs_code= join('', map "use $_ '$PREREQ_PM{$_}'; ", keys %PREREQ_PM).'1;';
   print $use_prereqs_code."\n";
   unless (eval $use_prereqs_code) {
      warn "$@\n";
      WriteMakefile(
         NAME         => 'Crypt::SecretBuffer',
         PREREQ_FATAL => 1,
         PREREQ_PM    => \%PREREQ_PM,
      );
      exit 1; # not reached
   }
}

my $dep= ExtUtils::Depends->new('Crypt::MultiKey', 'Crypt::SecretBuffer');
my @incpath;
my @libpath;
my @have;

sub check_lib_and_define {
   my ($macro, %opts)= @_;
   if (check_lib(
      ($opts{fn}? (
         # Just take the address of it, to verify it gets linked
         function => qq{void (*fn)()= (void(*)()) $opts{fn}; return fn != NULL? 0 : 1;},
      ) : ()),
      ($opts{h}? ( header => $opts{h} ) : ()),
      ($opts{lib}? ( lib => $opts{lib} ) : ()),
      incpath  => \@incpath,
      libpath  => \@libpath,
      debug => 1,
   )) {
      warn "Found ".($opts{fn}||$opts{h}||$opts{lib});
      push @have, $macro;
   } else {
      warn "Don't have ".($opts{fn}||$opts{h}||$opts{lib});
   }
}

check_lib_or_exit(fn => 'RAND_bytes', h => 'openssl/rand.h', lib => 'ssl');
check_lib_and_define(STDBOOL => h => 'stdbool.h');

$dep->set_libs(join ' ', map "-L$_", @libpath)
   if @libpath;
$dep->set_inc(join ' ', map "-I$_", @incpath)
   if @incpath;
$dep->install('cmk.h');
$dep->add_xs('CryptMultiKey.xs');
$dep->add_pm(map { my $n= $_; $n =~ s/^lib/\$(INST_LIB)/; $_ => $n } <lib/*/*.pm>, <lib/*/*/*.pm>);
$dep->add_typemaps('typemap');
$dep->save_config('InstallFiles.pm');
